SELECT
SESSION_ID ,
MAX(CASE WHEN ROWN = 1 THEN EVENT_NAME ELSE NULL END ) EVENT_1, 
MAX(CASE WHEN ROWN = 1 THEN DUR_COUNT ELSE NULL END ) DUR_EVENT_1,
MAX(CASE WHEN ROWN = 1 THEN EVENT_COUNT ELSE NULL END ) COUNT_EVENT_1 ,
MAX(CASE WHEN ROWN = 2 THEN EVENT_NAME ELSE NULL END ) EVENT_2 , 
MAX(CASE WHEN ROWN = 2 THEN DUR_COUNT ELSE NULL END ) DUR_EVENT_2 ,
MAX(CASE WHEN ROWN = 2 THEN EVENT_COUNT ELSE NULL END ) COUNT_EVENT_2 ,
MAX(CASE WHEN ROWN = 3 THEN EVENT_NAME ELSE NULL END ) EVENT_3 , 
MAX(CASE WHEN ROWN = 3 THEN DUR_COUNT ELSE NULL END ) DUR_EVENT_3 ,
MAX(CASE WHEN ROWN = 3 THEN EVENT_COUNT ELSE NULL END ) COUNT_EVENT_3
FROM 
(
SELECT
SESSION_ID,
EVENT_NAME ,
GRP_NO ,
SUM(DURATION) DUR_COUNT ,
COUNT(EVENT_NAME) EVENT_COUNT,
ROW_NUMBER() OVER ( PARTITION BY SESSION_ID ORDER BY EVENT_NAME ) ROWN
FROM
(
SELECT 
B.*,
SUM(X) OVER ( partition  BY SESSION_ID ORDER BY AT_TIME ASC  ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) GRP_NO
FROM 
(
SELECT 
A.* ,
CASE WHEN EVENT_NAME = MIN(EVENT_NAME) OVER ( partition BY SESSION_ID ORDER BY at_time ASC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING ) THEN 0 ELSE 1 END AS X
FROM session_events  A  ) b
) C
WHERE GRP_NO <= 3
GROUP BY SESSION_ID,EVENT_NAME ,GRP_NO 
)  B
GROUP BY SESSION_ID 